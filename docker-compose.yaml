version: "3.2"
services:
  mysqlserver:
    restart: always
    container_name: mysql_addr
    ports:
      - "33306:3306"
    image: daxia/qingting:mysql57
    environment:
      - MYSQL_DATABASE=edge
      - MYSQL_ROOT_PASSWORD=123
      - TZ=Asia/Shanghai
#  control:
#    restart: always
#    container_name: main
#    image: daxia/qingting:control_latest
#    environment:
#      - serverAddr=http://txy8g.songboy.site:10000
#      - token=4b2d6574e1ad0d5e8647f23295137b66
#      - nodeId=612
#      - taskId=177
#      - concurrent=4
#    stdin_open: true
#    tty: true
#    volumes:
#      - type: bind
#        source: "./control/code"
#        target: "/root/code"
  xflow:
    restart: always
    image: registry.cn-beijing.aliyuncs.com/daxia/qingting:xflow_latest
    stdin_open: true
    tty: true
    environment:
      - params=ewogICAgIndoaWxlIjogMSwKICAgICJ1c2VyX2lkIjogNjYwLAogICAgIm5vZGVfaWQiOiA5ODAsCiAgICAieGZsb3dfaWQiOiA4ODcsCiAgICAidG9rZW4iOiAiMzRlYmU3YTdiYWM4YTlmNmE1YTM3YTU2MDUwZDdlZTgiLAogICAgInNlcnZlckFkZHIiOiAiaHR0cDpcL1wvMTEuMjIuMzMuMTE2OjgwMDAiLAogICAgInN0YXJ0Tm9kZSI6ICIiLAogICAgInN0b3BOb2RlIjogIiIKfQ==
    volumes:
      - "./xflow/code:/root/code"
      - "/var/run/docker.sock:/var/run/docker.sock"


#  gitee:
#    image: daxia/qingting:gitee_latest
#    restart: always
#    links:
#      - mysqlserver:mysql_addr
#    volumes:
#      - type: bind
#        source: "./gitee/code"
#        target: "/root/code"
#      - type: bind
#        source: "./gitee/tools"
#        target: "/data/tools"
#    stdin_open: true
#    environment:
#      - serverAddr=http://txy8g.songboy.site:10000
#      - token=4b2d6574e1ad0d5e8647f23295137b66
#      - nodeId=126
#      - taskId=177
#      - concurrent=4
#    tty: true
#    command: /bin/sh -c "cd  /root/code/  && python3 main.py"
#  hema:
#    image: daxia/qingting:hema_latest
#    restart: always
#    links:
#      - mysqlserver:mysql_addr
#    volumes:
#      - type: bind
#        source: "./hema/code"
#        target: "/root/code"
#      - type: bind
#        source: "./hema/tools"
#        target: "/data/tools"
#    stdin_open: true
#    tty: true
#    command: /bin/sh -c "cd  /root/code/  && php index.php"
#  composer:
#    image: daxia/qingting:composer_latest
#    restart: always
#    links:
#      - mysqlserver:mysql_addr
#    volumes:
#      - type: bind
#        source: "./composer/code"
#        target: "/root/code"
#      - type: bind
#        source: "./composer/tools"
#        target: "/data/tools"
#      - type: bind
#        source: "/Users/tangqingsong/mycode/check"
#        target: "/data/code"
#    stdin_open: true
#    tty: true
#    command: /bin/sh -c "cd  /root/code/  && php index.php"
#  semgrep:
#    image: daxia/qingting:semgrep_latest
#    restart: always
#    links:
#      - mysqlserver:mysql_addr
#    volumes:
#      - type: bind
#        source: "./semgrep/code"
#        target: "/root/code"
#      - type: bind
#        source: "./semgrep/tools"
#        target: "/data/tools"
#      - type: bind
#        source: "/Users/tangqingsong/mycode/"
#        target: "/data/code"
#    stdin_open: true
#    tty: true
#    command: /bin/sh -c "cd  /root/code/  && php index.php"
#  rad:
#    image: daxia/qingting:rad_latest
#    restart: always
#    links:
#      - mysqlserver:mysql_addr
#    volumes:
#      - type: bind
#        source: "./rad/code"
#        target: "/root/code"
#      - type: bind
#        source: "./rad/tools"
#        target: "/data/tools"
#    stdin_open: true
#    tty: true
#    command: /bin/sh -c "cd  /root/code/  && php index.php"
#  xray:
#    image: daxia/qingting:xray_latest
#    restart: always
#    links:
#      - mysqlserver:mysql_addr
#    volumes:
#      - type: bind
#        source: "./xray/code"
#        target: "/root/code"
#      - type: bind
#        source: "./xray/tools"
#        target: "/data/tools"
#    stdin_open: true
#    tty: true
#    command: /bin/sh -c "cd  /root/code/  && php index.php"
#  sqlmap:
#    image: daxia/qingting:sqlmap_latest
#    restart: always
#    links:
#      - mysqlserver:mysql_addr
#    volumes:
#      - type: bind
#        source: "./sqlmap/code"
#        target: "/root/code"
#      - type: bind
#        source: "./sqlmap/tools"
#        target: "/data/tools"
#    stdin_open: true
#    tty: true
#    command: /bin/sh -c "cd  /root/code/  && php index.php"
#  dirmap:
#    image: daxia/qingting:dirmap_latest
#    restart: always
#    links:
#      - mysqlserver:mysql_addr
#    volumes:
#      - type: bind
#        source: "./dirmap/code"
#        target: "/root/code"
#      - type: bind
#        source: "./dirmap/tools"
#        target: "/data/tools"
#    stdin_open: true
#    tty: true
#    command: /bin/sh -c "cd  /root/code/  && php index.php"
#  dismap:
#    image: daxia/qingting:dismap_latest
#    restart: always
#    links:
#      - mysqlserver:mysql_addr
#    volumes:
#      - type: bind
#        source: "./dismap/code"
#        target: "/root/code"
#      - type: bind
#        source: "./dismap/tools"
#        target: "/data/tools"
#    stdin_open: true
#    tty: true
#    command: /bin/sh -c "cd  /root/code/  && php index.php"
#  oneforall:
#    image: daxia/qingting:oneforall_latest
#    restart: always
#    links:
#      - mysqlserver:mysql_addr
#    volumes:
#      - type: bind
#        source: "./oneforall/code"
#        target: "/root/code"
#      - type: bind
#        source: "./oneforall/tools/config"
#        target: "/OneForAll/config"
#    stdin_open: true
#    tty: true
#    command: /bin/sh -c "cd  /root/code/  && php index.php"
#  vulmap:
#    image: daxia/qingting:vulmap_latest
#    restart: always
#    links:
#      - mysqlserver:mysql_addr
#    volumes:
#      - type: bind
#        source: "./vulmap/code"
#        target: "/root/code"
#      - type: bind
#        source: "./vulmap/tools"
#        target: "/data/tools"
#    stdin_open: true
#    tty: true
#    command: /bin/sh -c "cd  /root/code/  && php index.php"
#  knock:
#    image: registry.cn-beijing.aliyuncs.com/daxia/qingting:knock_latest
#    restart: always
#    links:
#      - mysqlserver:mysql_addr
#    stdin_open: true
#    tty: true
#    command: /bin/sh -c "cd  /root/code/  && php index.php"
#    volumes:
#      - type: bind
#        source: "./knock/code"
#        target: "/root/code"
#      - type: bind
#        source: "./knock/tools"
#        target: "/data/tools"
#  nmap:
#    image: registry.cn-beijing.aliyuncs.com/daxia/qingting:nmap_latest
#    restart: always
#    links:
#      - mysqlserver:mysql_addr
#    stdin_open: true
#    tty: true
#    command: /bin/sh -c "cd  /root/code/  && php index.php"
#    volumes:
#      - type: bind
#        source: "./nmap/code"
#        target: "/root/code"
#      - type: bind
#        source: "./nmap/tools"
#        target: "/data/tools"
#  masscan:
#    image: registry.cn-beijing.aliyuncs.com/daxia/qingting:masscan_latest
#    restart: always
#    links:
#      - mysqlserver:mysql_addr
#    stdin_open: true
#    tty: true
#    command: /bin/sh -c "cd  /root/code/  && php index.php"
#    volumes:
#      - type: bind
#        source: "./masscan/code"
#        target: "/root/code"
#      - type: bind
#        source: "./masscan/tools"
#        target: "/data/tools"
#  awvs:
#    image: registry.cn-beijing.aliyuncs.com/daxia/qingting:awvs_latest
#    restart: always
#    links:
#      - mysqlserver:mysql_addr
#    stdin_open: true
#    tty: true
#    command: /bin/sh -c "apt update -y && apt install php-curl -y && cd  /root/code/  && php index.php"
#    volumes:
#      - type: bind
#        source: "./awvs/code"
#        target: "/root/code"
#      - type: bind
#        source: "./awvs/tools"
#        target: "/data/tools"
#    environment:
#      - awvs_url=https://txy8g.songboy.site:10007/
#      - awvs_token=1986ad8c0a5b3df4d7028d5f3c06e936c4ec5491cc96c41d8be1094e4b6aaa8af
#  fortify:
#    image: registry.cn-beijing.aliyuncs.com/daxia/qingting:fortify_latest
#    restart: always
#    links:
#      - mysqlserver:mysql_addr
#    stdin_open: true
#    tty: true
#    command: /bin/sh -c "cd  /root/code/  && php index.php"
#    volumes:
#      - type: bind
#        source: "./fortify/code"
#        target: "/root/code"
#      - type: bind
#        source: "./fortify/tools-ext"
#        target: "/data/tools"